@page "/registrarse"
@inject AuthenticationService AuthService
@inject NavigationManager NavigationManager
@inject SweetAlertService SweetAlert
@inject ILogger<Registrarse> logger

<!--creamos un formulario que pide email, password, nombre completo-->
<h3>Registrarse</h3>
<EditForm Model="usuario" OnValidSubmit="Registro">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="email">Email</label>
        <InputText class="form-control mb-2" type="text" @bind-Value="usuario.Email" />
    </div>
    <div class="form-group">
        <label for="clave">Contraseña</label>
        <InputText class="form-control mb-2" type="password" @bind-Value="usuario.Password" />
    </div>
    <div class="form-group">
        <label for="nombre">Nombre completo</label>
        <InputText class="form-control mb-2" type="text" @bind-Value="usuario.Nombre" />
    </div>
    <ValidationSummary />
    <button type="submit" class="btn btn-primary">Registrarse</button>
</EditForm>



@code {
    Usuario usuario { get; set; } =new Usuario();

    private async Task Registro()
    {
        var userId=await AuthService.createUserWithEmailAndPassword(usuario.Email, usuario.Password, usuario.Nombre);
        if (userId != null)
            await SweetAlert.FireAsync("Usuario Creado", $"Se envio un correo electrónico a {usuario.Email} debe confirmar su cuenta para poder continuar");

        NavigationManager.NavigateTo("/login");
    }
        
}