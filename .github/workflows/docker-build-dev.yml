# .github/workflows/docker-build.yml
name: Build app2.isp20.edu.ar
on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./DockerfileBackDev
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/instituto-dev-backend:latest

    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./DockerfileWebDev
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/instituto-dev-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
        
    - name: Generate development docker-compose
      run: |
        cat > docker-compose.dev.yml << 'EOL'
        version: '3.8'
        
        services:
          nginx-proxy:
            image: jwilder/nginx-proxy
            restart: always
            ports:
              - "80:80"
              - "443:443"
            volumes:
              - /var/run/docker.sock:/tmp/docker.sock:ro
              - certs:/etc/nginx/certs:ro
              - html:/usr/share/nginx/html
              - vhost:/etc/nginx/vhost.d
              - acme:/etc/acme.sh
            labels:
              - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
            networks:
              - app_network

          letsencrypt:
            image: jrcs/letsencrypt-nginx-proxy-companion
            restart: always
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock:ro
              - certs:/etc/nginx/certs:rw
              - html:/usr/share/nginx/html
              - vhost:/etc/nginx/vhost.d
              - acme:/etc/acme.sh
            depends_on:
              - nginx-proxy
            networks:
              - app_network

          backend:
            image: ${{ secrets.DOCKERHUB_USERNAME }}/instituto-dev-backend:latest
            restart: always
            environment:
              - ASPNETCORE_URLS=http://+:80
              - VIRTUAL_HOST=${{ secrets.BACKEND_DEV_DOMAIN }}
              - VIRTUAL_PORT=80
              - LETSENCRYPT_HOST=${{ secrets.BACKEND_DEV_DOMAIN }}
              - LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }}
            networks:
              - app_network
            depends_on:
              - nginx-proxy

          frontend:
            image: ${{ secrets.DOCKERHUB_USERNAME }}/instituto-dev-frontend:latest
            restart: always
            environment:
              - VIRTUAL_HOST=${{ secrets.FRONTEND_DEV_DOMAIN }}
              - LETSENCRYPT_HOST=${{ secrets.FRONTEND_DEV_DOMAIN }}
              - LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }}
            networks:
              - app_network
            depends_on:
              - nginx-proxy
              - backend

        networks:
          app_network:
            driver: bridge

        volumes:
          certs:
          html:
          vhost:
          acme:
        EOL
        
    - name: Copy docker-compose to server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: "docker-compose.dev.yml"
        target: "/opt/institutodev"
        
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /opt/institutodev
          mv docker-compose.dev.yml docker-compose.yml
          docker compose pull
          docker compose up -d